{"components/custom/tool-products":"\n<div id=\"tools\" class=\"landing-page-grid\">\n\n</div>\n<script>\n\n\n    // fetch the products from the GraphQL API\n  fetch(\"/graphql\", {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer {{ settings.storefront_api.token }}\", // use auto-generated token\n    },\n    body: JSON.stringify({\n      query: `query CategoryByUrl {\nsite {\n  route(path: \"/products/epoxy-tools-supplies/\") {\n    node {\n      id\n      ... on Category {\n        name\n        entityId\n        description\n        products {\n          edges {\n            node {\n              name\n              availabilityV2 {\n                description\n              }\n              seo {\n                  metaDescription\n              }\n              path\n              inventory {\n                  isInStock\n              }\n\n              defaultImage {\n                url(width: 400, height: 400)\n              }\n              prices {\n                price {\n                  ...PriceFields\n                }\n                priceRange {\n                  min {\n                    ...PriceFields\n                  }\n                  max {\n                    ...PriceFields\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n}\nfragment PriceFields on Money {\nvalue\ncurrencyCode\n}`,\n    }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n            \n      // append the data to the #tools ul\n      const tools = document.getElementById(\"tools\");\n      const products = data.data.site.route.node.products.edges;\n      products.forEach((product) => {\n        let gridItem = document.createElement(\"article\");\n        gridItem.className = \"card\";\n        gridItem.innerHTML = `\n  <figure class=\"card-figure\">\n    <div class=\"card-img-container\">\n      <img src=\"${product.node.defaultImage.url}\" alt=\"${product.node.seo.metaDescription}\"\n      class=\"card-image lazyautosizes ls-is-cached lazyloaded\"/>\n    </div>\n      <div class=\"card-body\">\n      <h3 class=\"card-title\">${product.node.name}</h3>\n      <p>${product.node.availabilityV2.description}</p>\n      <div class=\"card-text price-section\">\n        {{#if product.prices.priceRange.max.value '!==' product.prices.priceRange.min.value}}\n          $${product.node.prices.priceRange.min.value.toFixed(2)} - $${product.node.prices.priceRange.max.value.toFixed(2)}\n        {{else}}\n          $${product.node.prices.price.value.toFixed(2)}\n        {{/if}}\n    </div>\n    </div>\n    <div class=\"product-card-button\">\n      <a href=\"${product.node.path}\" class=\"scc-button\">View Product</a>\n    </div>\n  </figure>\n      `;\n      tools.appendChild(gridItem);\n\n        })\n      });\n\n          tools.className = \"scc-slider\"\n    .catch((error) => console.error(error));\n\n</script>\n"}
